{
    "sourceFile": "User/test/RegisterTest.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 59,
            "patches": [
                {
                    "date": 1684103588667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1684103604856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,44 +1,55 @@\n-function ConnectDB_Signup($firstName, $middleName, $lastName, $birth, $phone, $email, $userName, $passwd, $confpasswd)\n+<?php\n+class RegisterTest\n {\n-try {\n-$validSignup = False;\n-mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);\n-// Create connection\n-$mysqli = new mysqli(\"localhost\", \"root\", \"\", \"oms\", 3306);\n+    function ConnectDB_Signup($firstName, $middleName, $lastName, $birth, $phone, $email, $userName, $passwd, $confpasswd)\n+    {\n+        try {\n+            $validSignup = False;\n+            mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);\n+            // Create connection\n+            $mysqli = new mysqli(\"localhost\", \"root\", \"\", \"oms\", 3306);\n \n-// Check connection\n-if ($mysqli->connect_errno) {\n-echo \"Failed to connect to MySQL: \" . $mysqli->connect_error;\n-return $validSignup;\n-}\n+            // Check connection\n+            if ($mysqli->connect_errno) {\n+                echo \"Failed to connect to MySQL: \" . $mysqli->connect_error;\n+                return $validSignup;\n+            }\n \n-//check if phone number exists\n-$existcheck = $mysqli->query(\"SELECT `phone` FROM (SELECT DISTINCT `phone` FROM Paccount UNION SELECT DISTINCT `phone` FROM Daccount) AS users WHERE `phone` = '{$phone}';\");\n+            //check if phone number exists\n+            $existcheck = $mysqli->query(\"SELECT `phone` FROM (SELECT DISTINCT `phone` FROM Paccount UNION SELECT DISTINCT `phone` FROM Daccount) AS users WHERE `phone` = '{$phone}';\");\n \n-// checking if account exists\n-if ($existcheck->num_rows < 1) { //checking if username is taken $usercheck=$mysqli->query(\"SELECT `userName` FROM (SELECT DISTINCT `userName` FROM Paccount UNION SELECT DISTINCT `userName` FROM Daccount) AS users WHERE `userName` = '{$userName}';\");\n+            // checking if account exists\n+            if ($existcheck->num_rows < 1) {\n \n-    if ($usercheck->num_rows < 1) { // checking if passwords match if (strcmp($passwd, $confpasswd)==0) { $sql=\"INSERT INTO `Paccount`(`username`, `password`, `firstName`, `middleName`, `lastName`, `birthD`, `phone`, `email`) VALUES ('{$userName}','{$passwd}','{$firstName}','{$middleName}','{$lastName}','{$birth}','{$phone}','{$email}');\" ; $result=$mysqli->query($sql);\n+                //checking if username is taken\n+                $usercheck = $mysqli->query(\"SELECT `userName` FROM (SELECT DISTINCT `userName` FROM Paccount UNION SELECT DISTINCT `userName` FROM Daccount) AS users WHERE `userName` = '{$userName}';\");\n \n-        if (!$result) {\n-        echo \"Error: \" . $mysqli->error;\n\\ No newline at end of file\n-        return $validSignup;\n-        }\n+                if ($usercheck->num_rows < 1) {\n+                    // checking if passwords match\n+                    if (strcmp($passwd, $confpasswd) == 0) {\n \n-        if ($mysqli->affected_rows > 0) {\n-        $validSignup = True;\n-        }\n+                        $sql = \"INSERT INTO `Paccount`(`username`, `password`, `firstName`, `middleName`, `lastName`, `birthD`, `phone`, `email`) VALUES ('{$userName}','{$passwd}','{$firstName}','{$middleName}','{$lastName}','{$birth}','{$phone}','{$email}');\";\n+                        $result = $mysqli->query($sql);\n \n-        return $validSignup;\n+                        if (!$result) {\n+                            echo \"Error: \" . $mysqli->error;\n+                            return $validSignup;\n+                        }\n+\n+                        if ($mysqli->affected_rows > 0) {\n+                            $validSignup = True;\n+                        }\n+\n+                        return $validSignup;\n+                    }\n+                }\n+            }\n+            $validSignup = True;\n+            return $validSignup;\n+        } catch (Exception $e) {\n+            $mysqli->close();\n+            echo '<script>alert(Caught exception: ', $e->getMessage(), \")\";\n+            return $validSignup;\n         }\n-        }\n-        }\n-        $validSignup = True;\n-        return $validSignup;\n-        } catch (Exception $e) {\n-        $mysqli->close();\n-        echo '<script>\n-            alert(Caught exception: ', $e->getMessage(), \")\";\n-                return $validSignup;\n-            }\n-            }\n+    }\n+}\n"
                },
                {
                    "date": 1684103615026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,5 +51,9 @@\n             echo '<script>alert(Caught exception: ', $e->getMessage(), \")\";\n             return $validSignup;\n         }\n     }\n+\n+    function testSuccess()\n+    {\n+    }\n }\n"
                },
                {
                    "date": 1684103634178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,14 +46,15 @@\n             }\n             $validSignup = True;\n             return $validSignup;\n         } catch (Exception $e) {\n-            $mysqli->close();\n+            // $mysqli->close();\n             echo '<script>alert(Caught exception: ', $e->getMessage(), \")\";\n             return $validSignup;\n         }\n     }\n \n-    function testSuccess()\n+    function testSuccess(): void\n     {\n+        self::assertEquals();\n     }\n }\n"
                },
                {
                    "date": 1684103658503,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n                     // checking if passwords match\n                     if (strcmp($passwd, $confpasswd) == 0) {\n \n                         $sql = \"INSERT INTO `Paccount`(`username`, `password`, `firstName`, `middleName`, `lastName`, `birthD`, `phone`, `email`) VALUES ('{$userName}','{$passwd}','{$firstName}','{$middleName}','{$lastName}','{$birth}','{$phone}','{$email}');\";\n-                        $result = $mysqli->query($sql);\n+                        // $result = $mysqli->query($sql);\n \n                         if (!$result) {\n                             echo \"Error: \" . $mysqli->error;\n                             return $validSignup;\n"
                },
                {
                    "date": 1684103665992,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,12 +30,12 @@\n \n                         $sql = \"INSERT INTO `Paccount`(`username`, `password`, `firstName`, `middleName`, `lastName`, `birthD`, `phone`, `email`) VALUES ('{$userName}','{$passwd}','{$firstName}','{$middleName}','{$lastName}','{$birth}','{$phone}','{$email}');\";\n                         // $result = $mysqli->query($sql);\n \n-                        if (!$result) {\n-                            echo \"Error: \" . $mysqli->error;\n-                            return $validSignup;\n-                        }\n+                        // if (!$result) {\n+                        //     echo \"Error: \" . $mysqli->error;\n+                        //     return $validSignup;\n+                        // }\n \n                         if ($mysqli->affected_rows > 0) {\n                             $validSignup = True;\n                         }\n"
                },
                {
                    "date": 1684103682184,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,7 +54,7 @@\n     }\n \n     function testSuccess(): void\n     {\n-        self::assertEquals();\n+        self::assertEquals(True,);\n     }\n }\n"
                },
                {
                    "date": 1684103691187,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,7 +54,7 @@\n     }\n \n     function testSuccess(): void\n     {\n-        self::assertEquals(True,);\n+        self::assertEquals(True, ConnectDB_Signup());\n     }\n }\n"
                },
                {
                    "date": 1684103712717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,7 +54,7 @@\n     }\n \n     function testSuccess(): void\n     {\n-        self::assertEquals(True, ConnectDB_Signup());\n+        self::assertEquals(True, ConnectDB_Signup(\"tester1\", \"test0000\"));\n     }\n }\n"
                },
                {
                    "date": 1684103737587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,7 +54,7 @@\n     }\n \n     function testSuccess(): void\n     {\n-        self::assertEquals(True, ConnectDB_Signup(\"tester1\", \"test0000\"));\n+        self::assertEquals(True, ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"test0000\"));\n     }\n }\n"
                },
                {
                    "date": 1684103791936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,7 +54,7 @@\n     }\n \n     function testSuccess(): void\n     {\n-        self::assertEquals(True, ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"test0000\"));\n+        self::assertEquals(True, ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\"));\n     }\n }\n"
                },
                {
                    "date": 1684103798045,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,7 +54,7 @@\n     }\n \n     function testSuccess(): void\n     {\n-        self::assertEquals(True, ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\"));\n+        self::assertEquals(True, ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n }\n"
                },
                {
                    "date": 1684103809560,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,7 +54,7 @@\n     }\n \n     function testSuccess(): void\n     {\n-        self::assertEquals(True, ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n+        self::assertEquals(True, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n }\n"
                },
                {
                    "date": 1684103818738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,9 @@\n <?php\n-class RegisterTest\n+\n+use PHPUnit\\Framework\\TestCase;\n+\n+class RegisterTest extends TestCase\n {\n     function ConnectDB_Signup($firstName, $middleName, $lastName, $birth, $phone, $email, $userName, $passwd, $confpasswd)\n     {\n         try {\n"
                },
                {
                    "date": 1684104133100,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,11 +38,11 @@\n                         //     echo \"Error: \" . $mysqli->error;\n                         //     return $validSignup;\n                         // }\n \n-                        if ($mysqli->affected_rows > 0) {\n-                            $validSignup = True;\n-                        }\n+                        // if ($mysqli->affected_rows > 0) {\n+                        //     $validSignup = True;\n+                        // }\n \n                         return $validSignup;\n                     }\n                 }\n"
                },
                {
                    "date": 1684104188713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n             $validSignup = True;\n             return $validSignup;\n         } catch (Exception $e) {\n             // $mysqli->close();\n-            echo '<script>alert(Caught exception: ', $e->getMessage(), \")\";\n+            echo 'Caught exception: ' . $e->getMessage();\n             return $validSignup;\n         }\n     }\n \n"
                },
                {
                    "date": 1684104356333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,5 +59,10 @@\n     function testSuccess(): void\n     {\n         self::assertEquals(True, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n+\n+    function testFailure_1(): void\n+    {\n+        self::assertEquals(True, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n+    }\n }\n"
                },
                {
                    "date": 1684104368805,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,14 +55,14 @@\n             return $validSignup;\n         }\n     }\n \n-    function testSuccess(): void\n+    function testSuccess(): void // valid parameters\n     {\n         self::assertEquals(True, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n \n-    function testFailure_1(): void\n+    function testFailure_1(): void // \n     {\n-        self::assertEquals(True, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n+        self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n }\n"
                },
                {
                    "date": 1684104425603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n     {\n         self::assertEquals(True, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n \n-    function testFailure_1(): void // \n+    function testFailure_1(): void // invalid\n     {\n         self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n }\n"
                },
                {
                    "date": 1684116765460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n         try {\n             $validSignup = False;\n             mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);\n             // Create connection\n-            $mysqli = new mysqli(\"localhost\", \"root\", \"\", \"oms\", 3306);\n+            $mysqli = new mysqli(\"127.0.0.1\", \"root\", \"\", \"oms\", 3306);\n \n             // Check connection\n             if ($mysqli->connect_errno) {\n                 echo \"Failed to connect to MySQL: \" . $mysqli->connect_error;\n@@ -60,9 +60,9 @@\n     {\n         self::assertEquals(True, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n \n-    function testFailure_1(): void // invalid\n+    function testFailure_1(): void // invalid \n     {\n         self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n }\n"
                },
                {
                    "date": 1684119701282,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n                         // if ($mysqli->affected_rows > 0) {\n                         //     $validSignup = True;\n                         // }\n \n-                        return $validSignup;\n+\n                     }\n                 }\n             }\n             $validSignup = True;\n"
                },
                {
                    "date": 1684119729848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,13 +42,13 @@\n                         // if ($mysqli->affected_rows > 0) {\n                         //     $validSignup = True;\n                         // }\n \n-\n+                        $validSignup = True;\n                     }\n                 }\n             }\n-            $validSignup = True;\n+\n             return $validSignup;\n         } catch (Exception $e) {\n             // $mysqli->close();\n             echo 'Caught exception: ' . $e->getMessage();\n@@ -64,5 +64,9 @@\n     function testFailure_1(): void // invalid \n     {\n         self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n+    function testFailure_2(): void // invalid \n+    {\n+        self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n+    }\n }\n"
                },
                {
                    "date": 1684119738194,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,11 +60,11 @@\n     {\n         self::assertEquals(True, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n \n-    function testFailure_1(): void // invalid \n+    function testFailure_1(): void // invalid name\n     {\n-        self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n+        self::assertEquals(False, self::ConnectDB_Signup(\"this is\", 1, \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n     function testFailure_2(): void // invalid \n     {\n         self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n"
                },
                {
                    "date": 1684119757773,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,12 @@\n                 echo \"Failed to connect to MySQL: \" . $mysqli->connect_error;\n                 return $validSignup;\n             }\n \n+            if (){\n+                \n+            }\n+\n             //check if phone number exists\n             $existcheck = $mysqli->query(\"SELECT `phone` FROM (SELECT DISTINCT `phone` FROM Paccount UNION SELECT DISTINCT `phone` FROM Daccount) AS users WHERE `phone` = '{$phone}';\");\n \n             // checking if account exists\n"
                },
                {
                    "date": 1684119793602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,10 +17,9 @@\n                 echo \"Failed to connect to MySQL: \" . $mysqli->connect_error;\n                 return $validSignup;\n             }\n \n-            if (){\n-                \n+            if (!isString($firstName) || !isString($middleName) || $lastName) {\n             }\n \n             //check if phone number exists\n             $existcheck = $mysqli->query(\"SELECT `phone` FROM (SELECT DISTINCT `phone` FROM Paccount UNION SELECT DISTINCT `phone` FROM Daccount) AS users WHERE `phone` = '{$phone}';\");\n"
                },
                {
                    "date": 1684119803059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n                 echo \"Failed to connect to MySQL: \" . $mysqli->connect_error;\n                 return $validSignup;\n             }\n \n-            if (!isString($firstName) || !isString($middleName) || $lastName) {\n+            if (!isString($firstName) || !isString($middleName) || isString($lastName)) {\n             }\n \n             //check if phone number exists\n             $existcheck = $mysqli->query(\"SELECT `phone` FROM (SELECT DISTINCT `phone` FROM Paccount UNION SELECT DISTINCT `phone` FROM Daccount) AS users WHERE `phone` = '{$phone}';\");\n"
                },
                {
                    "date": 1684119817538,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,11 +17,10 @@\n                 echo \"Failed to connect to MySQL: \" . $mysqli->connect_error;\n                 return $validSignup;\n             }\n \n-            if (!isString($firstName) || !isString($middleName) || isString($lastName)) {\n-            }\n \n+\n             //check if phone number exists\n             $existcheck = $mysqli->query(\"SELECT `phone` FROM (SELECT DISTINCT `phone` FROM Paccount UNION SELECT DISTINCT `phone` FROM Daccount) AS users WHERE `phone` = '{$phone}';\");\n \n             // checking if account exists\n"
                },
                {
                    "date": 1684119833011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,8 @@\n                 return $validSignup;\n             }\n \n \n-\n             //check if phone number exists\n             $existcheck = $mysqli->query(\"SELECT `phone` FROM (SELECT DISTINCT `phone` FROM Paccount UNION SELECT DISTINCT `phone` FROM Daccount) AS users WHERE `phone` = '{$phone}';\");\n \n             // checking if account exists\n"
                },
                {
                    "date": 1684119840934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,10 @@\n                 echo \"Failed to connect to MySQL: \" . $mysqli->connect_error;\n                 return $validSignup;\n             }\n \n+            if (!isString($firstName) || !isString($middleName) || isString($lastName)) {\n+            }\n \n             //check if phone number exists\n             $existcheck = $mysqli->query(\"SELECT `phone` FROM (SELECT DISTINCT `phone` FROM Paccount UNION SELECT DISTINCT `phone` FROM Daccount) AS users WHERE `phone` = '{$phone}';\");\n \n"
                },
                {
                    "date": 1684119852311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n                 echo \"Failed to connect to MySQL: \" . $mysqli->connect_error;\n                 return $validSignup;\n             }\n \n-            if (!isString($firstName) || !isString($middleName) || isString($lastName)) {\n+            if (!is_String($firstName) || !is_String($middleName) || !is_String($lastName)) {\n             }\n \n             //check if phone number exists\n             $existcheck = $mysqli->query(\"SELECT `phone` FROM (SELECT DISTINCT `phone` FROM Paccount UNION SELECT DISTINCT `phone` FROM Daccount) AS users WHERE `phone` = '{$phone}';\");\n"
                },
                {
                    "date": 1684119861121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,9 @@\n                 return $validSignup;\n             }\n \n             if (!is_String($firstName) || !is_String($middleName) || !is_String($lastName)) {\n+                return $validSignup;\n             }\n \n             //check if phone number exists\n             $existcheck = $mysqli->query(\"SELECT `phone` FROM (SELECT DISTINCT `phone` FROM Paccount UNION SELECT DISTINCT `phone` FROM Daccount) AS users WHERE `phone` = '{$phone}';\");\n"
                },
                {
                    "date": 1684119930718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,14 @@\n             if (!is_String($firstName) || !is_String($middleName) || !is_String($lastName)) {\n                 return $validSignup;\n             }\n \n+            if (preg_match('/^\\+\\d{11}$/', $phone)) {\n+                echo \"Valid phone number!\";\n+            } else {\n+                echo \"Invalid phone number!\";\n+            }\n+\n             //check if phone number exists\n             $existcheck = $mysqli->query(\"SELECT `phone` FROM (SELECT DISTINCT `phone` FROM Paccount UNION SELECT DISTINCT `phone` FROM Daccount) AS users WHERE `phone` = '{$phone}';\");\n \n             // checking if account exists\n"
                },
                {
                    "date": 1684119950665,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,9 @@\n             }\n \n             if (preg_match('/^\\+\\d{11}$/', $phone)) {\n                 echo \"Valid phone number!\";\n+                return $validSignup;\n             } else {\n                 echo \"Invalid phone number!\";\n             }\n \n"
                },
                {
                    "date": 1684119959806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,13 +21,11 @@\n             if (!is_String($firstName) || !is_String($middleName) || !is_String($lastName)) {\n                 return $validSignup;\n             }\n \n-            if (preg_match('/^\\+\\d{11}$/', $phone)) {\n+            if (!preg_match('/^\\+\\d{11}$/', $phone)) {\n                 echo \"Valid phone number!\";\n                 return $validSignup;\n-            } else {\n-                echo \"Invalid phone number!\";\n             }\n \n             //check if phone number exists\n             $existcheck = $mysqli->query(\"SELECT `phone` FROM (SELECT DISTINCT `phone` FROM Paccount UNION SELECT DISTINCT `phone` FROM Daccount) AS users WHERE `phone` = '{$phone}';\");\n"
                },
                {
                    "date": 1684119977365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n                 return $validSignup;\n             }\n \n             if (!preg_match('/^\\+\\d{11}$/', $phone)) {\n-                echo \"Valid phone number!\";\n+                echo \"Invalid phone number!\";\n                 return $validSignup;\n             }\n \n             //check if phone number exists\n@@ -73,9 +73,9 @@\n     function testFailure_1(): void // invalid name\n     {\n         self::assertEquals(False, self::ConnectDB_Signup(\"this is\", 1, \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n-    function testFailure_2(): void // invalid \n+    function testFailure_2(): void // invalid phone\n     {\n         self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n }\n"
                },
                {
                    "date": 1684119991355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n                 return $validSignup;\n             }\n \n             if (!preg_match('/^\\+\\d{11}$/', $phone)) {\n-                echo \"Invalid phone number!\";\n+                // echo \"Invalid phone number!\";\n                 return $validSignup;\n             }\n \n             //check if phone number exists\n@@ -75,7 +75,7 @@\n         self::assertEquals(False, self::ConnectDB_Signup(\"this is\", 1, \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n     function testFailure_2(): void // invalid phone\n     {\n-        self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n+        self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+1333445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n }\n"
                },
                {
                    "date": 1684120078160,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,11 @@\n             if (!preg_match('/^\\+\\d{11}$/', $phone)) {\n                 // echo \"Invalid phone number!\";\n                 return $validSignup;\n             }\n+            if (filter_var($email, FILTER_VALIDATE_EMAIL)) {\n+                // Email format is valid\n+            }\n \n             //check if phone number exists\n             $existcheck = $mysqli->query(\"SELECT `phone` FROM (SELECT DISTINCT `phone` FROM Paccount UNION SELECT DISTINCT `phone` FROM Daccount) AS users WHERE `phone` = '{$phone}';\");\n \n"
                },
                {
                    "date": 1684120088369,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,10 +25,10 @@\n             if (!preg_match('/^\\+\\d{11}$/', $phone)) {\n                 // echo \"Invalid phone number!\";\n                 return $validSignup;\n             }\n-            if (filter_var($email, FILTER_VALIDATE_EMAIL)) {\n-                // Email format is valid\n+            if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n+                return $validSignup;\n             }\n \n             //check if phone number exists\n             $existcheck = $mysqli->query(\"SELECT `phone` FROM (SELECT DISTINCT `phone` FROM Paccount UNION SELECT DISTINCT `phone` FROM Daccount) AS users WHERE `phone` = '{$phone}';\");\n"
                },
                {
                    "date": 1684120099225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,5 +80,9 @@\n     function testFailure_2(): void // invalid phone\n     {\n         self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+1333445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n+    function testFailure_3(): void // invalid phone\n+    {\n+        self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+1333445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n+    }\n }\n"
                },
                {
                    "date": 1684120106963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,9 @@\n     function testFailure_2(): void // invalid phone\n     {\n         self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+1333445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n-    function testFailure_3(): void // invalid phone\n+    function testFailure_3(): void // invalid email\n     {\n-        self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+1333445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n+        self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+1333445555\", \"tester\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n }\n"
                },
                {
                    "date": 1684120124518,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,5 +84,9 @@\n     function testFailure_3(): void // invalid email\n     {\n         self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+1333445555\", \"tester\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n+    function testFailure_4(): void // invalid email\n+    {\n+        self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+1333445555\", \"tester\", \"tester001\", \"tester0000\", \"tester0000\"));\n+    }\n }\n"
                },
                {
                    "date": 1684120132206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,11 +82,11 @@\n         self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+1333445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n     function testFailure_3(): void // invalid email\n     {\n-        self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+1333445555\", \"tester\", \"tester001\", \"tester0000\", \"tester0000\"));\n+        self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n     function testFailure_4(): void // invalid email\n     {\n-        self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+1333445555\", \"tester\", \"tester001\", \"tester0000\", \"tester0000\"));\n+        self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n }\n"
                },
                {
                    "date": 1684120196143,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,12 @@\n             }\n             if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n                 return $validSignup;\n             }\n+            $today = date('Y-m-d'); // get today's date in the same format as $birthdate\n+            if ($birthdate > $today) {\n+                echo 'Invalid birthdate: must be before today.';\n+            }\n \n             //check if phone number exists\n             $existcheck = $mysqli->query(\"SELECT `phone` FROM (SELECT DISTINCT `phone` FROM Paccount UNION SELECT DISTINCT `phone` FROM Daccount) AS users WHERE `phone` = '{$phone}';\");\n \n@@ -86,7 +90,7 @@\n         self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n     function testFailure_4(): void // invalid email\n     {\n-        self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester\", \"tester001\", \"tester0000\", \"tester0000\"));\n+        self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n }\n"
                },
                {
                    "date": 1684120215037,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,11 +28,12 @@\n             }\n             if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n                 return $validSignup;\n             }\n+\n             $today = date('Y-m-d'); // get today's date in the same format as $birthdate\n-            if ($birthdate > $today) {\n-                echo 'Invalid birthdate: must be before today.';\n+            if ($birth > $today) {\n+                return $validSignup;\n             }\n \n             //check if phone number exists\n             $existcheck = $mysqli->query(\"SELECT `phone` FROM (SELECT DISTINCT `phone` FROM Paccount UNION SELECT DISTINCT `phone` FROM Daccount) AS users WHERE `phone` = '{$phone}';\");\n"
                },
                {
                    "date": 1684120231009,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n     function testFailure_3(): void // invalid email\n     {\n         self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n-    function testFailure_4(): void // invalid email\n+    function testFailure_4(): void // invalid birthday\n     {\n         self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n }\n"
                },
                {
                    "date": 1684120240183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n     function testFailure_3(): void // invalid email\n     {\n         self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n-    function testFailure_4(): void // invalid birthday\n+    function testFailure_4(): void // invalid birthdate\n     {\n-        self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n+        self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2030-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n }\n"
                },
                {
                    "date": 1684120249882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,5 +93,9 @@\n     function testFailure_4(): void // invalid birthdate\n     {\n         self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2030-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n+    function testFailure_5(): void // invalid birthdate\n+    {\n+        self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2030-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n+    }\n }\n"
                },
                {
                    "date": 1684120271933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,9 @@\n     function testFailure_4(): void // invalid birthdate\n     {\n         self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2030-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n-    function testFailure_5(): void // invalid birthdate\n+    function testFailure_5(): void // invalid username\n     {\n         self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2030-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n }\n"
                },
                {
                    "date": 1684120281188,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,7 +95,7 @@\n         self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2030-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n     function testFailure_5(): void // invalid username\n     {\n-        self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2030-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n+        self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", -1, \"tester0000\", \"tester0000\"));\n     }\n }\n"
                },
                {
                    "date": 1684120316526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,9 @@\n             if (!is_String($firstName) || !is_String($middleName) || !is_String($lastName)) {\n                 return $validSignup;\n             }\n \n+\n             if (!preg_match('/^\\+\\d{11}$/', $phone)) {\n                 // echo \"Invalid phone number!\";\n                 return $validSignup;\n             }\n"
                },
                {
                    "date": 1684120325331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n                 echo \"Failed to connect to MySQL: \" . $mysqli->connect_error;\n                 return $validSignup;\n             }\n \n-            if (!is_String($firstName) || !is_String($middleName) || !is_String($lastName)) {\n+            if (!is_String($firstName) || !is_String($middleName) || !is_String($lastName) ||) {\n                 return $validSignup;\n             }\n \n \n"
                },
                {
                    "date": 1684120342559,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n                 echo \"Failed to connect to MySQL: \" . $mysqli->connect_error;\n                 return $validSignup;\n             }\n \n-            if (!is_String($firstName) || !is_String($middleName) || !is_String($lastName) ||) {\n+            if (!is_String($firstName) || !is_String($middleName) || !is_String($lastName) || !is_String($birth) || !is_String($lastName) || !is_String($lastName) || !is_String($lastName)) {\n                 return $validSignup;\n             }\n \n \n"
                },
                {
                    "date": 1684120350498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n                 echo \"Failed to connect to MySQL: \" . $mysqli->connect_error;\n                 return $validSignup;\n             }\n \n-            if (!is_String($firstName) || !is_String($middleName) || !is_String($lastName) || !is_String($birth) || !is_String($lastName) || !is_String($lastName) || !is_String($lastName)) {\n+            if (!is_String($firstName) || !is_String($middleName) || !is_String($lastName) || !is_String($birth) || !is_String($phone) || !is_String($email) || !is_String($lastName)) {\n                 return $validSignup;\n             }\n \n \n"
                },
                {
                    "date": 1684120359345,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n                 echo \"Failed to connect to MySQL: \" . $mysqli->connect_error;\n                 return $validSignup;\n             }\n \n-            if (!is_String($firstName) || !is_String($middleName) || !is_String($lastName) || !is_String($birth) || !is_String($phone) || !is_String($email) || !is_String($lastName)) {\n+            if (!is_String($firstName) || !is_String($middleName) || !is_String($lastName) || !is_String($birth) || !is_String($phone) || !is_String($email) || !is_String($userName)) {\n                 return $validSignup;\n             }\n \n \n"
                },
                {
                    "date": 1684120365124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n                 echo \"Failed to connect to MySQL: \" . $mysqli->connect_error;\n                 return $validSignup;\n             }\n \n-            if (!is_String($firstName) || !is_String($middleName) || !is_String($lastName) || !is_String($birth) || !is_String($phone) || !is_String($email) || !is_String($userName)) {\n+            if (!is_String($firstName) || !is_String($middleName) || !is_String($lastName) || !is_String($birth) || !is_String($phone) || !is_String($email) || !is_String($userName) || !is_String($lastName) || !is_String($lastName)) {\n                 return $validSignup;\n             }\n \n \n"
                },
                {
                    "date": 1684120372884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n                 echo \"Failed to connect to MySQL: \" . $mysqli->connect_error;\n                 return $validSignup;\n             }\n \n-            if (!is_String($firstName) || !is_String($middleName) || !is_String($lastName) || !is_String($birth) || !is_String($phone) || !is_String($email) || !is_String($userName) || !is_String($lastName) || !is_String($lastName)) {\n+            if (!is_String($firstName) || !is_String($middleName) || !is_String($lastName) || !is_String($birth) || !is_String($phone) || !is_String($email) || !is_String($userName) || !is_String($passwd) || !is_String($confpasswd)) {\n                 return $validSignup;\n             }\n \n \n"
                },
                {
                    "date": 1684120515859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,5 +98,9 @@\n     function testFailure_5(): void // invalid username\n     {\n         self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", -1, \"tester0000\", \"tester0000\"));\n     }\n+    function testFailure_5(): void // invalid username\n+    {\n+        self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", -1, \"tester0000\", \"tester0000\"));\n+    }\n }\n"
                },
                {
                    "date": 1684120537353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,9 +98,9 @@\n     function testFailure_5(): void // invalid username\n     {\n         self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", -1, \"tester0000\", \"tester0000\"));\n     }\n-    function testFailure_5(): void // invalid username\n+    function testFailure_6(): void // confirm password not same as password\n     {\n         self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", -1, \"tester0000\", \"tester0000\"));\n     }\n }\n"
                },
                {
                    "date": 1684120547642,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,7 +100,7 @@\n         self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", -1, \"tester0000\", \"tester0000\"));\n     }\n     function testFailure_6(): void // confirm password not same as password\n     {\n-        self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", -1, \"tester0000\", \"tester0000\"));\n+        self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n     }\n }\n"
                },
                {
                    "date": 1684120573622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,7 +100,7 @@\n         self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", -1, \"tester0000\", \"tester0000\"));\n     }\n     function testFailure_6(): void // confirm password not same as password\n     {\n-        self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0000\"));\n+        self::assertEquals(False, self::ConnectDB_Signup(\"this is\", \"a\", \"tester\", \"2000-01-01\", \"+13334445555\", \"tester@gmail.com\", \"tester001\", \"tester0000\", \"tester0\"));\n     }\n }\n"
                }
            ],
            "date": 1684103588667,
            "name": "Commit-0",
            "content": "function ConnectDB_Signup($firstName, $middleName, $lastName, $birth, $phone, $email, $userName, $passwd, $confpasswd)\n{\ntry {\n$validSignup = False;\nmysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);\n// Create connection\n$mysqli = new mysqli(\"localhost\", \"root\", \"\", \"oms\", 3306);\n\n// Check connection\nif ($mysqli->connect_errno) {\necho \"Failed to connect to MySQL: \" . $mysqli->connect_error;\nreturn $validSignup;\n}\n\n//check if phone number exists\n$existcheck = $mysqli->query(\"SELECT `phone` FROM (SELECT DISTINCT `phone` FROM Paccount UNION SELECT DISTINCT `phone` FROM Daccount) AS users WHERE `phone` = '{$phone}';\");\n\n// checking if account exists\nif ($existcheck->num_rows < 1) { //checking if username is taken $usercheck=$mysqli->query(\"SELECT `userName` FROM (SELECT DISTINCT `userName` FROM Paccount UNION SELECT DISTINCT `userName` FROM Daccount) AS users WHERE `userName` = '{$userName}';\");\n\n    if ($usercheck->num_rows < 1) { // checking if passwords match if (strcmp($passwd, $confpasswd)==0) { $sql=\"INSERT INTO `Paccount`(`username`, `password`, `firstName`, `middleName`, `lastName`, `birthD`, `phone`, `email`) VALUES ('{$userName}','{$passwd}','{$firstName}','{$middleName}','{$lastName}','{$birth}','{$phone}','{$email}');\" ; $result=$mysqli->query($sql);\n\n        if (!$result) {\n        echo \"Error: \" . $mysqli->error;\n        return $validSignup;\n        }\n\n        if ($mysqli->affected_rows > 0) {\n        $validSignup = True;\n        }\n\n        return $validSignup;\n        }\n        }\n        }\n        $validSignup = True;\n        return $validSignup;\n        } catch (Exception $e) {\n        $mysqli->close();\n        echo '<script>\n            alert(Caught exception: ', $e->getMessage(), \")\";\n                return $validSignup;\n            }\n            }"
        }
    ]
}